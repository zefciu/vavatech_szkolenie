\documentclass{beamer}

\mode<presentation>
{
  \usetheme{Berkeley}
  \usecolortheme{crane}
}

\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{polski}

% For pygmentize
\usepackage{fancyvrb}
\usepackage{color}

\input{styles}
\title{Funkcje i struktury Pythona}

\author[]{Szymon Pyżalski}

\date {4 -- 8 XII 2017}
\logo {\includegraphics[width=1.5cm]{vavatech_logo_small.png}}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\section{Instrukcje sterujące}
\insertsectionhead
\begin{frame}{if}
    \begin{itemize}
        \pause
            \item Powoduje wykonanie bloku instrukcji, jeśli warunek jest
                spełniony
        \pause
            \item Opcjonalna klauzula \Verb|else| -- w przeciwnym wypadku
        \pause
            \item Połączenie \Verb|else| i \Verb|if| -- \Verb|elif|
    \end{itemize}
\end{frame}

\begin{frame}{if}
    \input{if_statement}
\end{frame}

\begin{frame}{while}
    \begin{itemize}
        \pause
            \item Wykonuje się \emph{dopóki} warunek jest spełniony
        \pause
            \item Może się nie wykonać w ogóle
        \pause
            \item Możliwe opuszczenie bloku przy pomocy \Verb|break| i
                \Verb|continue|
    \end{itemize}
\end{frame}

\begin{frame}{while}
    \input{while_statement}
\end{frame}

\begin{frame}{for}
    \begin{itemize}
        \pause
            \item Przyjmuje jako argument obiekt \Verb|iterowalny|
        \pause
            \item Przypisuje kolejne wartości zmiennej
        \pause
            \item Możliwe opuszczenie bloku przy pomocy \Verb|break| i
                \Verb|continue|
    \end{itemize}
\end{frame}

\begin{frame}{for}
    \input{for_statement}
\end{frame}

\begin{frame}{zadanie}
    \Verb|zadanie2-1.py|
\end{frame}

\section{Funkcja -- teoria}
\insertsectionhead

\begin{frame}{Czym jest funkcja}
    \begin{itemize}
        \pause
    \item Funkcja w znaczeniu matematycznym
        \pause
    \item Procedura
        \pause
    \item Funkcja jako uogólnienie dwóch powyższych
    \end{itemize}
\end{frame}

\begin{frame}{Argumenty}
    \begin{itemize}
        \pause
    \item Argumenty pozycyjne \Verb|funkcja(arg1, arg2)|
        \pause
    \item Argumenty nazwane \Verb|funcja(x=argx, y=argy)|
        \pause
    \item Wartości domyślne argumentów
    \end{itemize}
\end{frame}

\begin{frame}{Wartość zwracana}
    \begin{itemize}
        \pause
    \item Funkcja może zwracać wartość dowolnego typu
        \pause
    \item Funkcje, które nie mają do zwrócenia niczego interesującego, zwracają
        \Verb|None|
        \pause
    \item W każdym przypadku możemy zignorować wartość nie przypisując jej do
        niczego.
    \end{itemize}
\end{frame}
\section{Funkcje i typy wbudowane}
\insertsectionhead

\begin{frame}{Konwersje typów}
    \begin{tiny}
    \input{conversions}
    \end{tiny}
\end{frame}

\begin{frame}{Wejście i wyjście na konsolę}
    \begin{itemize}
        \pause
    \item Domyślnym urządzeniem I/O jest konsola (klawiatura + ekran)
        \pause
    \item \Verb|print| wypisuje obiekty na konsolę
        \pause
    \item \Verb|input| wypisuje prompt i pobiera łańcuch z klawiatury
    \end{itemize}
\end{frame}

\begin{frame}{Wejście i wyjście na konsolę}
    \begin{tiny}
    \input{print_input}
    \end{tiny}
\end{frame}

\begin{frame}{Operacje na iteratorach}
    \begin{tiny}
    \input{builtin_iterator}
    \end{tiny}
\end{frame}

\begin{frame}{Matematyczne}
    \input{builtin_math}
\end{frame}

\begin{frame}{Inne}
    \input{builtin_other}
\end{frame}

\begin{frame}{Zadanie}
    zadanie2-2.py
\end{frame}

\begin{frame}{Definiowanie własnych funkcji}
    \input{function_simplest}
\end{frame}

\begin{frame}{Definiowanie własnych funkcji}
    \input{function_arg}
\end{frame}

\begin{frame}{Definiowanie własnych funkcji}
    \input{function_args_kwargs}
\end{frame}

\begin{frame}{Zadanie}
    zadanie2-3.py
\end{frame}

\end{document}
