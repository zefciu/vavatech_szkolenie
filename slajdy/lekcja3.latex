\documentclass{beamer}

\mode<presentation>
{
  \usetheme{Berkeley}
  \usecolortheme{crane}
}

\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{polski}

% For pygmentize
\usepackage{fancyvrb}
\usepackage{color}

\input{styles}
\title{Programowanie obiektowe w Pythonie}
\author[]{Szymon Pyżalski}

\date{4 -- 8 XII 2017}
\logo{\includegraphics[width=1.5cm]{vavatech_logo_small.png}}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}
  \titlepage
\end{frame}

\section{Teoria}
\insertsectionhead

\begin{frame}{Zarys teorii OOP}
    \begin{itemize}
    \pause
    \item Abstrakcja programu opisana jest zależnościami między obiektami
    \pause
    \item Obiekty przynależą do klas
    \pause
    \item Klasy zdefiniowane są przez posiadane pola danych i metody
    \end{itemize}
\end{frame}

\begin{frame}{Specyfika OOP w Pythonie}
    \begin{itemize}
    \item Wszystko jest obiektem!
    \pause
    \item Nie musimy deklarować nazw pól.
    \pause
    \item Istnieją klasy, ale ważne jest jakie metody zdefiniowaliśmy
        \emph{(duck typing)}
    \end{itemize}
\end{frame}

\section{Definiowanie obiektów}
\insertsectionhead

\begin{frame}{Prosty obiekt}
    \begin{tiny}
    \input{object_simple}
    \end{tiny}
\end{frame}

\begin{frame}{Specjalne metody}
    \begin{itemize}
    \pause
    \item \texttt{\_\_init\_\_} -- inicjalizator
    \pause
    \item \texttt{\_\_repr\_\_} -- reprezentacja jako string dla maszyny
    \pause
    \item \texttt{\_\_str\_\_} -- reprezentacja jako string dla człowieka
    \pause
    \item \texttt{\_\_int\_\_} \texttt{\_\_float\_\_} etc. -- konwersja typów
    \end{itemize}
\end{frame}

\end{document}
